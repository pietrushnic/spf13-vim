set shell=/bin/zsh
set makeprg=gcc\ -Wall\ %

" editing macros
" insert quotes and EOL to begging and end of string
let @b = 'A\n"I"'
" first argument is a register in inline assembly
let @c = 'I"wwi%%A\n"'
" replace Intel syntax assembly with AT&T syntax
let @d = 'wvt,"1xxxA, "1pA\n"I"j"'
" insert #ifndef __GNUC__ around line
let @e = 'O#ifndef __GNUC__^jo#endif //__GNUC__'
" copy _asm block and insert #ifndef __GNUC__
let @a = 'O#ifndef __GNUC__/_v/}y/}o#elseo#endif //__GNUC__Op'
let @f = 'v/}=x/{r(/}cw);'
" fugitive mapping
nmap <C-g>d :Gdiff<CR>
nmap <C-g>sd :Gsdiff<CR>
nmap <C-g>w :Gwrite<CR>
nmap <C-g>2 :diffget /2<CR>
nmap <C-g>3 :diffget /3<CR>
nmap <C-g>g :diffget<CR>
nmap <C-g>u :diffupdate<CR>
nmap <C-g>s :Gstatus<CR>
nmap <C-g>c :Gcommit -m "%:t:r: fix "<C-left>

map <C-\> :vsp <CR>:exec("tag ".expand("<cword>"))<CR>

set nobackup       " no backup files
set nowritebackup  " only in case you don't want a backup file while editing
set noswapfile     " no swap files

" ignore white space changes
set diffopt+=iwhite

filetype plugin indent on

let g:pymode = 1
let g:pymode_rope = 0
let g:pymode_run = 0
let g:pymode_folding = 0
let g:pymode_indent = 1

" Documentation
let g:pymode_doc = 1
let g:pymode_doc_key = 'K'
"
" "Linting
let g:pymode_lint = 0
" let g:pymode_lint_checker = "pyflakes,pep8"
" " Auto check on save
" let g:pymode_lint_write = 1
"
" " Support virtualenv
" let g:pymode_virtualenv = 0
"
" Enable breakpoints plugin
let g:pymode_breakpoint = 1
let g:pymode_breakpoint_key = 'b'
"
" " syntax highlighting
let g:pymode_syntax = 1
" let g:pymode_syntax_all = 1
" let g:pymode_syntax_indent_errors = g:pymode_syntax_all
" let g:pymode_syntax_space_errors = g:pymode_syntax_all
"
" " Don't autofold code
" let g:pymode_folding = 1"

" tags and cscope db rescan
nnoremap <silent> Rs    :cs kill 0<CR>:!ctags -R;cscope -R -q -b -v<CR>
nnoremap <silent> Rr    :!ripper-tags -R<CR>
" " reconnect to cscope db
nnoremap <silent> cs    :cs add cscope.out<CR>
set mouse=""
set tabstop=8

nnoremap <leader>g :grep <cword> . -r<CR>
au Syntax taskreport,notes IndentGuidesDisable
au BufRead,BufNewFile,BufEnter ~/.gdbinit call LinuxFormatting()

""function LinuxFormatting()
""    setlocal tabstop=8
""    setlocal shiftwidth=8
""    setlocal softtabstop=8
""    setlocal textwidth=80
""    setlocal noexpandtab
""
""    setlocal cindent
""    setlocal formatoptions=tcqlron
""    setlocal cinoptions=:0,l1,t0,g0
""endfunction

let g:task_report_name = 'long'
let g:notes_directories = ['~/Documents/Notes']
let g:neocomplcache_disable_auto_complete = 1
set grepprg=grep\ -n\ --exclude=tags\ --exclude=cscope.out\ $*\ /dev/null
